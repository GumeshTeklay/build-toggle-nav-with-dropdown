@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;700&display=swap');
body {
    background-color: #818cf8;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23f1f5f9' fill-opacity='0.26'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");
    font-family: 'Poppins', sans-serif;
    font-weight: 300;
    font-style: normal;
}
.flex-container {
    display: flex;
    flex-flow: wrap;
    justify-content: space-between;
    align-items: center;
}
.inner-container {
    padding: 0 1rem;
}

/* ************************* Typography ************************* */
h1{
    font-size: 1.125rem;
    line-height: 3.75rem; /*60px*/
}
h2{
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    font-style: normal;
}

/* ************************* Header ************************* */
header{
    background-color: #f8fafc;
}
button {
    background-color: #f8fafc;
    border: none;
}
svg{
    width: 1.25rem;
}
header a {
    text-decoration: none;
    color: #475569;
    font-size: 0.875rem;
}
h1 a{
    color: #dc2626;
}
nav{
    position: absolute;
    background-color: #f8fafc;
    width: 98vw;
    top: 3.75rem;
    left: 0;
    /* once this changes to position absolute, it's no longer in the layout of the 
    HTML, therefore it's no longer a flex item*/
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
    /* flex: 1 0 100%; */
    /* max-height: 0; */
    
}
/* spacial class that will show the nav when the button is clicked 
(do not add to the html) */
.show-nav{
    /* max-height: 250; */
    visibility: visible;
    opacity: 1;
    overflow: visible;
}
.menu li{
    line-height: 3.125rem;
}
.menu a{
    display: flex;
    justify-content: space-between;
    padding: 0 0.5rem;
}
.menu a:hover{
    background-color: #e2e8f0;
}
.menu svg{
    width: 10px;
}
.submenu {
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
    max-height: 0;
}
.submenu li{
    border-bottom: 1px solid #cbd5e1;
}
/* What do you want to hover over? --> first selector + :hover
   What do you want to change? --> second selector */
.menu li:hover > .submenu {
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 14.0625rem;
}
.menu li:focus-within>ul,
.menu li> ul:focus{
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 14.0625rem;
    display: block;
}
/* This works to an extent, but the hover state has limitations. A better way to dev a dropdown nav is with 
javascript */
@media screen and (min-width: 1100px) {
    .inner-container{
        padding: 0;
        width: 1000px;
        margin: 0 auto;
    }
    .btn{
        display: none;
    }
    nav{
        position: static;
        visibility: visible;
        opacity: 1;
        overflow: visible;
        width: unset;
    }
    .inner-container > a{
        order: 1;
    }
    ul.menu{
        display: flex;
        gap: 1.5rem;
    }
    ul.submenu{
        padding: 0;
        position: absolute;
        top: 55px;
        right: 0;
        background-color: #f8fafc;;
        visibility: hidden;
        opacity: 0;
        width: 100%
    }
    ul.menu li{
        position: relative;
        white-space: nowrap;
        
    }
    ul.menu li:hover > ul {
        visibility: visible;
        opacity: 1;
    }
    ul.menu li:focus-within > ul,
    ul.menu li > ul:focus {
        visibility: visible;
        opacity: 1;
        display: block;
    }
    /* TO DO: 
        1. layout the 3 top level links horizontally, side by side
        2. layout the submenu links (dropdown for wider screen)
        3. add focus or keyboard focus to the dropdown links */
}